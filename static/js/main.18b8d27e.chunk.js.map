{"version":3,"sources":["logo.svg","TextList.js","Error.js","App.js","index.js"],"names":["Item","props","className","src","url","TextList","items","gifs","map","itemData","Error","isError","text","giphy","GiphyFetch","App","useState","setText","results","setResults","err","setErr","value","onChange","e","target","onClick","length","console","log","apiCall","a","animate","limit","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,I,kBCQTA,EAAO,SAACC,GACZ,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKC,IAAKF,EAAMG,SAKPC,EAfE,SAACJ,GAChB,IAAMK,EAAQL,EAAMM,KAAKC,KAAI,SAACC,GAC5B,OAAO,cAAC,EAAD,CAAML,IAAKK,EAASL,SAE7B,OAAO,qBAAKF,UAAU,iBAAf,SAAiCI,KCG3BI,EARD,SAACT,GACb,OAAKA,EAAMU,QAIJ,mBAAGT,UAAU,QAAb,SAAsBD,EAAMW,OAH1B,M,QCOLC,G,MAAQ,IAAIC,aAAW,qCA4CdC,MA1Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAsBH,oBAAS,GAA/B,mBAAOI,EAAP,KAAYC,EAAZ,KAyBA,OACE,sBAAKnB,UAAU,MAAf,UACE,yDACA,wEACA,uBAAOA,UAAU,cAAcoB,MAAOV,EAAMW,SA3B5B,SAACC,GACnBP,EAAQO,EAAEC,OAAOH,UA2Bf,wBAAQpB,UAAU,aAAawB,QAxBd,SAACF,GACpB,GAAoB,IAAhBZ,EAAKe,OAAT,CAKAC,QAAQC,IAAIjB,GAEZ,IAAMkB,EAAO,uCAAG,4BAAAC,EAAA,sEACSlB,EAAMmB,QAAQpB,EAAM,CAAEqB,MAAO,KADtC,OACRC,EADQ,OAEdN,QAAQC,IAAIK,EAASC,MACrBhB,EAAWe,EAASC,MAHN,2CAAH,qDAMbL,IACAb,EAAQ,IACRI,GAAO,QAdLA,GAAO,IAsBP,oBAGA,cAAC,EAAD,CAAOV,QAASS,EAAKR,KAAK,wCACzBM,GAAW,cAAC,EAAD,CAAUX,KAAMW,QC3ClCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.18b8d27e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./TextList.css\";\nconst TextList = (props) => {\n  const items = props.gifs.map((itemData) => {\n    return <Item url={itemData.url} />;\n  });\n  return <div className=\"text-container\">{items}</div>;\n};\n\nconst Item = (props) => {\n  return (\n    <div className=\"gif-item\">\n      <img src={props.url} />\n    </div>\n  );\n};\n\nexport default TextList;\n","const Error = (props) => {\n  if (!props.isError) {\n    return null;\n  }\n\n  return <p className=\"error\">{props.text}</p>;\n};\n\nexport default Error;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TextList from \"./TextList\";\nimport Error from \"./Error\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { Grid } from \"@giphy/react-components\";\nimport { useState } from \"react\";\n\n// API KEY\nconst giphy = new GiphyFetch(\"IXXJT71j0XcGFelwdvK10d6p1XwgSJRE\");\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [err, setErr] = useState(false);\n\n  const handleInput = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    if (text.length === 0) {\n      setErr(true);\n      return;\n    }\n\n    console.log(text);\n\n    const apiCall = async () => {\n      const response = await giphy.animate(text, { limit: 50 });\n      console.log(response.data);\n      setResults(response.data);\n    };\n\n    apiCall();\n    setText(\"\");\n    setErr(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Animated Text Generator</h1>\n      <h3>Type text into the form and hit submit</h3>\n      <input className=\"input-field\" value={text} onChange={handleInput} />\n      <button className=\"submit-btn\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <Error isError={err} text=\"need length longer than 0 for input\" />\n      {results && <TextList gifs={results} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}